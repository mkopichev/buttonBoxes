
f103_buttonBoxes.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000047c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005ac  080005b4  000105b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005ac  080005ac  000105b4  2**0
                  CONTENTS
  4 .ARM          00000000  080005ac  080005ac  000105b4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005ac  080005b4  000105b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005ac  080005ac  000105ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005b0  080005b0  000105b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  080005b4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  080005b4  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000105b4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007a9  00000000  00000000  000105dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001aa  00000000  00000000  00010d86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00010f30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000060  00000000  00000000  00010fa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000fc6c  00000000  00000000  00011008  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000065f  00000000  00000000  00020c74  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00052f39  00000000  00000000  000212d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0007420c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000128  00000000  00000000  0007425c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000594 	.word	0x08000594

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000594 	.word	0x08000594

08000170 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800017a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800017e:	2b00      	cmp	r3, #0
 8000180:	db0b      	blt.n	800019a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000182:	79fb      	ldrb	r3, [r7, #7]
 8000184:	f003 021f 	and.w	r2, r3, #31
 8000188:	4906      	ldr	r1, [pc, #24]	; (80001a4 <__NVIC_EnableIRQ+0x34>)
 800018a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800018e:	095b      	lsrs	r3, r3, #5
 8000190:	2001      	movs	r0, #1
 8000192:	fa00 f202 	lsl.w	r2, r0, r2
 8000196:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800019a:	bf00      	nop
 800019c:	370c      	adds	r7, #12
 800019e:	46bd      	mov	sp, r7
 80001a0:	bc80      	pop	{r7}
 80001a2:	4770      	bx	lr
 80001a4:	e000e100 	.word	0xe000e100

080001a8 <main>:

static uint16_t systick_counter = 0;

void delayMs(uint16_t millisec);

int main(void) {
 80001a8:	b580      	push	{r7, lr}
 80001aa:	af00      	add	r7, sp, #0

	RCC->CR = (1 << RCC_CR_HSEON_Pos);
 80001ac:	4b4e      	ldr	r3, [pc, #312]	; (80002e8 <main+0x140>)
 80001ae:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80001b2:	601a      	str	r2, [r3, #0]
	while (!(RCC->CR & (1 << RCC_CR_HSERDY_Pos))) {
 80001b4:	e000      	b.n	80001b8 <main+0x10>

		__NOP();
 80001b6:	bf00      	nop
	while (!(RCC->CR & (1 << RCC_CR_HSERDY_Pos))) {
 80001b8:	4b4b      	ldr	r3, [pc, #300]	; (80002e8 <main+0x140>)
 80001ba:	681b      	ldr	r3, [r3, #0]
 80001bc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80001c0:	2b00      	cmp	r3, #0
 80001c2:	d0f8      	beq.n	80001b6 <main+0xe>
	}
	RCC->CFGR |= (1 << RCC_CFGR_SW_Pos);
 80001c4:	4b48      	ldr	r3, [pc, #288]	; (80002e8 <main+0x140>)
 80001c6:	685b      	ldr	r3, [r3, #4]
 80001c8:	4a47      	ldr	r2, [pc, #284]	; (80002e8 <main+0x140>)
 80001ca:	f043 0301 	orr.w	r3, r3, #1
 80001ce:	6053      	str	r3, [r2, #4]

	SysTick->LOAD = 8000;
 80001d0:	4b46      	ldr	r3, [pc, #280]	; (80002ec <main+0x144>)
 80001d2:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 80001d6:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos)
 80001d8:	4b44      	ldr	r3, [pc, #272]	; (80002ec <main+0x144>)
 80001da:	2207      	movs	r2, #7
 80001dc:	601a      	str	r2, [r3, #0]
			| (1 << SysTick_CTRL_CLKSOURCE_Pos)
			| (1 << SysTick_CTRL_TICKINT_Pos);

	RCC->APB2ENR |= (1 << RCC_APB2ENR_IOPCEN_Pos)
 80001de:	4b42      	ldr	r3, [pc, #264]	; (80002e8 <main+0x140>)
 80001e0:	699b      	ldr	r3, [r3, #24]
 80001e2:	4a41      	ldr	r2, [pc, #260]	; (80002e8 <main+0x140>)
 80001e4:	f043 0319 	orr.w	r3, r3, #25
 80001e8:	6193      	str	r3, [r2, #24]
			| (1 << RCC_APB2ENR_IOPBEN_Pos) | (1 << RCC_APB2ENR_AFIOEN_Pos);
	RCC->APB1ENR |= (1 << RCC_APB1ENR_TIM2EN_Pos)
 80001ea:	4b3f      	ldr	r3, [pc, #252]	; (80002e8 <main+0x140>)
 80001ec:	69db      	ldr	r3, [r3, #28]
 80001ee:	4a3e      	ldr	r2, [pc, #248]	; (80002e8 <main+0x140>)
 80001f0:	f043 0303 	orr.w	r3, r3, #3
 80001f4:	61d3      	str	r3, [r2, #28]
			| (1 << RCC_APB1ENR_TIM3EN_Pos);

	// PC13 is a service LED
	GPIOC->CRH |= (2 << GPIO_CRH_MODE13_Pos); // PC13 output, open-drain, speed 2 MHz max
 80001f6:	4b3e      	ldr	r3, [pc, #248]	; (80002f0 <main+0x148>)
 80001f8:	685b      	ldr	r3, [r3, #4]
 80001fa:	4a3d      	ldr	r2, [pc, #244]	; (80002f0 <main+0x148>)
 80001fc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000200:	6053      	str	r3, [r2, #4]

	// button are on PORTB 7, 6, 5 pins
	GPIOB->CRL &= ~((1 << GPIO_CRL_CNF7_Pos) | (1 << GPIO_CRL_CNF6_Pos)
 8000202:	4b3c      	ldr	r3, [pc, #240]	; (80002f4 <main+0x14c>)
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	4a3b      	ldr	r2, [pc, #236]	; (80002f4 <main+0x14c>)
 8000208:	f023 4388 	bic.w	r3, r3, #1140850688	; 0x44000000
 800020c:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8000210:	6013      	str	r3, [r2, #0]
			| (1 << GPIO_CRL_CNF5_Pos)); // clear button pins
	GPIOB->CRL |= (2 << GPIO_CRL_CNF7_Pos) | (2 << GPIO_CRL_CNF6_Pos)
 8000212:	4b38      	ldr	r3, [pc, #224]	; (80002f4 <main+0x14c>)
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	4a37      	ldr	r2, [pc, #220]	; (80002f4 <main+0x14c>)
 8000218:	f043 4308 	orr.w	r3, r3, #2281701376	; 0x88000000
 800021c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8000220:	6013      	str	r3, [r2, #0]
			| (2 << GPIO_CRL_CNF5_Pos); // set button pins as inputs
	GPIOB->ODR |= (1 << GPIO_ODR_ODR7_Pos) | (1 << GPIO_ODR_ODR6_Pos)
 8000222:	4b34      	ldr	r3, [pc, #208]	; (80002f4 <main+0x14c>)
 8000224:	68db      	ldr	r3, [r3, #12]
 8000226:	4a33      	ldr	r2, [pc, #204]	; (80002f4 <main+0x14c>)
 8000228:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800022c:	60d3      	str	r3, [r2, #12]
			| (1 << GPIO_ODR_ODR5_Pos); // set inputs with pull-up resistors
	EXTI->IMR |= (1 << EXTI_IMR_MR7_Pos) | (1 << EXTI_IMR_MR6_Pos)
 800022e:	4b32      	ldr	r3, [pc, #200]	; (80002f8 <main+0x150>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	4a31      	ldr	r2, [pc, #196]	; (80002f8 <main+0x150>)
 8000234:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8000238:	6013      	str	r3, [r2, #0]
			| (1 << EXTI_IMR_MR5_Pos); // interrupts on
	EXTI->FTSR |= (1 << EXTI_FTSR_TR7_Pos) | (1 << EXTI_FTSR_TR6_Pos)
 800023a:	4b2f      	ldr	r3, [pc, #188]	; (80002f8 <main+0x150>)
 800023c:	68db      	ldr	r3, [r3, #12]
 800023e:	4a2e      	ldr	r2, [pc, #184]	; (80002f8 <main+0x150>)
 8000240:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8000244:	60d3      	str	r3, [r2, #12]
			| (1 << EXTI_FTSR_TR5_Pos);
	AFIO->EXTICR[1] |= (1 << AFIO_EXTICR2_EXTI7_Pos)
 8000246:	4b2d      	ldr	r3, [pc, #180]	; (80002fc <main+0x154>)
 8000248:	68db      	ldr	r3, [r3, #12]
 800024a:	4a2c      	ldr	r2, [pc, #176]	; (80002fc <main+0x154>)
 800024c:	f443 5388 	orr.w	r3, r3, #4352	; 0x1100
 8000250:	f043 0310 	orr.w	r3, r3, #16
 8000254:	60d3      	str	r3, [r2, #12]
			| (1 << AFIO_EXTICR2_EXTI6_Pos) | (1 << AFIO_EXTICR2_EXTI5_Pos); // PORTB 7, 6, 5 interrupt enable
	NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000256:	2017      	movs	r0, #23
 8000258:	f7ff ff8a 	bl	8000170 <__NVIC_EnableIRQ>

	// button LEDs are on PORTB 15, 14, 13
	GPIOB->CRH |= (2 << GPIO_CRH_MODE15_Pos) | (2 << GPIO_CRH_MODE14_Pos)
 800025c:	4b25      	ldr	r3, [pc, #148]	; (80002f4 <main+0x14c>)
 800025e:	685b      	ldr	r3, [r3, #4]
 8000260:	4a24      	ldr	r2, [pc, #144]	; (80002f4 <main+0x14c>)
 8000262:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
 8000266:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800026a:	6053      	str	r3, [r2, #4]
			| (2 << GPIO_CRH_MODE13_Pos);
	GPIOB->CRH &= ~((1 << GPIO_CRH_CNF15_Pos) | (1 << GPIO_CRH_CNF14_Pos)
 800026c:	4b21      	ldr	r3, [pc, #132]	; (80002f4 <main+0x14c>)
 800026e:	685b      	ldr	r3, [r3, #4]
 8000270:	4a20      	ldr	r2, [pc, #128]	; (80002f4 <main+0x14c>)
 8000272:	f023 4388 	bic.w	r3, r3, #1140850688	; 0x44000000
 8000276:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800027a:	6053      	str	r3, [r2, #4]
			| (1 << GPIO_CRH_CNF13_Pos)); // push-pull

	// TIM2 is for buttons debouncing
	TIM2->CR1 |= (1 << TIM_CR1_URS_Pos);
 800027c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000286:	f043 0304 	orr.w	r3, r3, #4
 800028a:	6013      	str	r3, [r2, #0]
	TIM2->DIER |= (1 << TIM_DIER_UIE_Pos);
 800028c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000290:	68db      	ldr	r3, [r3, #12]
 8000292:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000296:	f043 0301 	orr.w	r3, r3, #1
 800029a:	60d3      	str	r3, [r2, #12]
	TIM2->PSC = 8000; // timer frequency is 1 kHz
 800029c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002a0:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 80002a4:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = 20; // timer period is ARR ms
 80002a6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002aa:	2214      	movs	r2, #20
 80002ac:	62da      	str	r2, [r3, #44]	; 0x2c
	NVIC_EnableIRQ(TIM2_IRQn);
 80002ae:	201c      	movs	r0, #28
 80002b0:	f7ff ff5e 	bl	8000170 <__NVIC_EnableIRQ>

	// TIM3 is for time delay between buttons pushes
	TIM3->CR1 |= (1 << TIM_CR1_URS_Pos);
 80002b4:	4b12      	ldr	r3, [pc, #72]	; (8000300 <main+0x158>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	4a11      	ldr	r2, [pc, #68]	; (8000300 <main+0x158>)
 80002ba:	f043 0304 	orr.w	r3, r3, #4
 80002be:	6013      	str	r3, [r2, #0]
	TIM3->DIER |= (1 << TIM_DIER_UIE_Pos);
 80002c0:	4b0f      	ldr	r3, [pc, #60]	; (8000300 <main+0x158>)
 80002c2:	68db      	ldr	r3, [r3, #12]
 80002c4:	4a0e      	ldr	r2, [pc, #56]	; (8000300 <main+0x158>)
 80002c6:	f043 0301 	orr.w	r3, r3, #1
 80002ca:	60d3      	str	r3, [r2, #12]
	TIM3->PSC = 8000; // timer frequency is 1 kHz
 80002cc:	4b0c      	ldr	r3, [pc, #48]	; (8000300 <main+0x158>)
 80002ce:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 80002d2:	629a      	str	r2, [r3, #40]	; 0x28
	TIM3->ARR = 5000; // timer period is ARR ms
 80002d4:	4b0a      	ldr	r3, [pc, #40]	; (8000300 <main+0x158>)
 80002d6:	f241 3288 	movw	r2, #5000	; 0x1388
 80002da:	62da      	str	r2, [r3, #44]	; 0x2c
	NVIC_EnableIRQ(TIM3_IRQn);
 80002dc:	201d      	movs	r0, #29
 80002de:	f7ff ff47 	bl	8000170 <__NVIC_EnableIRQ>

	for (;;) {

		__NOP();
 80002e2:	bf00      	nop
 80002e4:	e7fd      	b.n	80002e2 <main+0x13a>
 80002e6:	bf00      	nop
 80002e8:	40021000 	.word	0x40021000
 80002ec:	e000e010 	.word	0xe000e010
 80002f0:	40011000 	.word	0x40011000
 80002f4:	40010c00 	.word	0x40010c00
 80002f8:	40010400 	.word	0x40010400
 80002fc:	40010000 	.word	0x40010000
 8000300:	40000400 	.word	0x40000400

08000304 <EXTI9_5_IRQHandler>:
	}
}

void EXTI9_5_IRQHandler(void) {
 8000304:	b480      	push	{r7}
 8000306:	af00      	add	r7, sp, #0

	if (EXTI->PR & (1 << EXTI_PR_PR7_Pos)) { // button pressed
 8000308:	4b25      	ldr	r3, [pc, #148]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 800030a:	695b      	ldr	r3, [r3, #20]
 800030c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000310:	2b00      	cmp	r3, #0
 8000312:	d011      	beq.n	8000338 <EXTI9_5_IRQHandler+0x34>

		EXTI->PR = (1 << EXTI_PR_PR7_Pos); // clear external interrupt pending
 8000314:	4b22      	ldr	r3, [pc, #136]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 8000316:	2280      	movs	r2, #128	; 0x80
 8000318:	615a      	str	r2, [r3, #20]
		EXTI->IMR &= ~(1 << EXTI_IMR_MR7_Pos); // disable button interrupt
 800031a:	4b21      	ldr	r3, [pc, #132]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	4a20      	ldr	r2, [pc, #128]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 8000320:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000324:	6013      	str	r3, [r2, #0]
		TIM2->CR1 |= (1 << TIM_CR1_CEN_Pos); // start timer
 8000326:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000330:	f043 0301 	orr.w	r3, r3, #1
 8000334:	6013      	str	r3, [r2, #0]
		return;
 8000336:	e02f      	b.n	8000398 <EXTI9_5_IRQHandler+0x94>
	}
	if (EXTI->PR & (1 << EXTI_PR_PR6_Pos)) {
 8000338:	4b19      	ldr	r3, [pc, #100]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 800033a:	695b      	ldr	r3, [r3, #20]
 800033c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000340:	2b00      	cmp	r3, #0
 8000342:	d011      	beq.n	8000368 <EXTI9_5_IRQHandler+0x64>

		EXTI->PR = (1 << EXTI_PR_PR6_Pos);
 8000344:	4b16      	ldr	r3, [pc, #88]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 8000346:	2240      	movs	r2, #64	; 0x40
 8000348:	615a      	str	r2, [r3, #20]
		EXTI->IMR &= ~(1 << EXTI_IMR_MR6_Pos);
 800034a:	4b15      	ldr	r3, [pc, #84]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	4a14      	ldr	r2, [pc, #80]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 8000350:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000354:	6013      	str	r3, [r2, #0]
		TIM2->CR1 |= (1 << TIM_CR1_CEN_Pos);
 8000356:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000360:	f043 0301 	orr.w	r3, r3, #1
 8000364:	6013      	str	r3, [r2, #0]
		return;
 8000366:	e017      	b.n	8000398 <EXTI9_5_IRQHandler+0x94>
	}
	if (EXTI->PR & (1 << EXTI_PR_PR5_Pos)) {
 8000368:	4b0d      	ldr	r3, [pc, #52]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 800036a:	695b      	ldr	r3, [r3, #20]
 800036c:	f003 0320 	and.w	r3, r3, #32
 8000370:	2b00      	cmp	r3, #0
 8000372:	d011      	beq.n	8000398 <EXTI9_5_IRQHandler+0x94>

		EXTI->PR = (1 << EXTI_PR_PR5_Pos);
 8000374:	4b0a      	ldr	r3, [pc, #40]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 8000376:	2220      	movs	r2, #32
 8000378:	615a      	str	r2, [r3, #20]
		EXTI->IMR &= ~(1 << EXTI_IMR_MR5_Pos);
 800037a:	4b09      	ldr	r3, [pc, #36]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	4a08      	ldr	r2, [pc, #32]	; (80003a0 <EXTI9_5_IRQHandler+0x9c>)
 8000380:	f023 0320 	bic.w	r3, r3, #32
 8000384:	6013      	str	r3, [r2, #0]
		TIM2->CR1 |= (1 << TIM_CR1_CEN_Pos);
 8000386:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000390:	f043 0301 	orr.w	r3, r3, #1
 8000394:	6013      	str	r3, [r2, #0]
		return;
 8000396:	bf00      	nop
	}
}
 8000398:	46bd      	mov	sp, r7
 800039a:	bc80      	pop	{r7}
 800039c:	4770      	bx	lr
 800039e:	bf00      	nop
 80003a0:	40010400 	.word	0x40010400

080003a4 <TIM2_IRQHandler>:

void TIM2_IRQHandler(void) {
 80003a4:	b480      	push	{r7}
 80003a6:	af00      	add	r7, sp, #0

	if (TIM2->SR & (1 << TIM_SR_UIF_Pos)) { // timer overflow occured
 80003a8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80003ac:	691b      	ldr	r3, [r3, #16]
 80003ae:	f003 0301 	and.w	r3, r3, #1
 80003b2:	2b00      	cmp	r3, #0
 80003b4:	d058      	beq.n	8000468 <TIM2_IRQHandler+0xc4>

		TIM2->SR &= ~(1 << TIM_SR_UIF_Pos); // clear timer overflow interrupt flag
 80003b6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80003ba:	691b      	ldr	r3, [r3, #16]
 80003bc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80003c0:	f023 0301 	bic.w	r3, r3, #1
 80003c4:	6113      	str	r3, [r2, #16]
		if (!(GPIOB->IDR & (1 << GPIO_IDR_IDR7_Pos))) { // if button is still pressed after bouncing time
 80003c6:	4b2a      	ldr	r3, [pc, #168]	; (8000470 <TIM2_IRQHandler+0xcc>)
 80003c8:	689b      	ldr	r3, [r3, #8]
 80003ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d114      	bne.n	80003fc <TIM2_IRQHandler+0x58>

			GPIOB->ODR |= (1 << GPIO_ODR_ODR15_Pos); // light up one of the LEDs
 80003d2:	4b27      	ldr	r3, [pc, #156]	; (8000470 <TIM2_IRQHandler+0xcc>)
 80003d4:	68db      	ldr	r3, [r3, #12]
 80003d6:	4a26      	ldr	r2, [pc, #152]	; (8000470 <TIM2_IRQHandler+0xcc>)
 80003d8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80003dc:	60d3      	str	r3, [r2, #12]
			TIM2->CR1 &= ~(1 << TIM_CR1_CEN_Pos); // stop TIMER2
 80003de:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80003e8:	f023 0301 	bic.w	r3, r3, #1
 80003ec:	6013      	str	r3, [r2, #0]
			TIM3->CR1 |= (1 << TIM_CR1_CEN_Pos); // start TIMER3
 80003ee:	4b21      	ldr	r3, [pc, #132]	; (8000474 <TIM2_IRQHandler+0xd0>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4a20      	ldr	r2, [pc, #128]	; (8000474 <TIM2_IRQHandler+0xd0>)
 80003f4:	f043 0301 	orr.w	r3, r3, #1
 80003f8:	6013      	str	r3, [r2, #0]
			return;
 80003fa:	e035      	b.n	8000468 <TIM2_IRQHandler+0xc4>
		}
		if (!(GPIOB->IDR & (1 << GPIO_IDR_IDR6_Pos))) {
 80003fc:	4b1c      	ldr	r3, [pc, #112]	; (8000470 <TIM2_IRQHandler+0xcc>)
 80003fe:	689b      	ldr	r3, [r3, #8]
 8000400:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000404:	2b00      	cmp	r3, #0
 8000406:	d114      	bne.n	8000432 <TIM2_IRQHandler+0x8e>

			GPIOB->ODR |= (1 << GPIO_ODR_ODR14_Pos);
 8000408:	4b19      	ldr	r3, [pc, #100]	; (8000470 <TIM2_IRQHandler+0xcc>)
 800040a:	68db      	ldr	r3, [r3, #12]
 800040c:	4a18      	ldr	r2, [pc, #96]	; (8000470 <TIM2_IRQHandler+0xcc>)
 800040e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000412:	60d3      	str	r3, [r2, #12]
			TIM2->CR1 &= ~(1 << TIM_CR1_CEN_Pos);
 8000414:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800041e:	f023 0301 	bic.w	r3, r3, #1
 8000422:	6013      	str	r3, [r2, #0]
			TIM3->CR1 |= (1 << TIM_CR1_CEN_Pos);
 8000424:	4b13      	ldr	r3, [pc, #76]	; (8000474 <TIM2_IRQHandler+0xd0>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	4a12      	ldr	r2, [pc, #72]	; (8000474 <TIM2_IRQHandler+0xd0>)
 800042a:	f043 0301 	orr.w	r3, r3, #1
 800042e:	6013      	str	r3, [r2, #0]
			return;
 8000430:	e01a      	b.n	8000468 <TIM2_IRQHandler+0xc4>
		}
		if (!(GPIOB->IDR & (1 << GPIO_IDR_IDR5_Pos))) {
 8000432:	4b0f      	ldr	r3, [pc, #60]	; (8000470 <TIM2_IRQHandler+0xcc>)
 8000434:	689b      	ldr	r3, [r3, #8]
 8000436:	f003 0320 	and.w	r3, r3, #32
 800043a:	2b00      	cmp	r3, #0
 800043c:	d114      	bne.n	8000468 <TIM2_IRQHandler+0xc4>

			GPIOB->ODR |= (1 << GPIO_ODR_ODR13_Pos);
 800043e:	4b0c      	ldr	r3, [pc, #48]	; (8000470 <TIM2_IRQHandler+0xcc>)
 8000440:	68db      	ldr	r3, [r3, #12]
 8000442:	4a0b      	ldr	r2, [pc, #44]	; (8000470 <TIM2_IRQHandler+0xcc>)
 8000444:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000448:	60d3      	str	r3, [r2, #12]
			TIM2->CR1 &= ~(1 << TIM_CR1_CEN_Pos);
 800044a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000454:	f023 0301 	bic.w	r3, r3, #1
 8000458:	6013      	str	r3, [r2, #0]
			TIM3->CR1 |= (1 << TIM_CR1_CEN_Pos);
 800045a:	4b06      	ldr	r3, [pc, #24]	; (8000474 <TIM2_IRQHandler+0xd0>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	4a05      	ldr	r2, [pc, #20]	; (8000474 <TIM2_IRQHandler+0xd0>)
 8000460:	f043 0301 	orr.w	r3, r3, #1
 8000464:	6013      	str	r3, [r2, #0]
			return;
 8000466:	bf00      	nop
		}
	}
}
 8000468:	46bd      	mov	sp, r7
 800046a:	bc80      	pop	{r7}
 800046c:	4770      	bx	lr
 800046e:	bf00      	nop
 8000470:	40010c00 	.word	0x40010c00
 8000474:	40000400 	.word	0x40000400

08000478 <TIM3_IRQHandler>:

void TIM3_IRQHandler(void) {
 8000478:	b480      	push	{r7}
 800047a:	af00      	add	r7, sp, #0

	if (TIM3->SR & (1 << TIM_SR_UIF_Pos)) {
 800047c:	4b0d      	ldr	r3, [pc, #52]	; (80004b4 <TIM3_IRQHandler+0x3c>)
 800047e:	691b      	ldr	r3, [r3, #16]
 8000480:	f003 0301 	and.w	r3, r3, #1
 8000484:	2b00      	cmp	r3, #0
 8000486:	d011      	beq.n	80004ac <TIM3_IRQHandler+0x34>

		TIM3->SR &= ~(1 << TIM_SR_UIF_Pos);
 8000488:	4b0a      	ldr	r3, [pc, #40]	; (80004b4 <TIM3_IRQHandler+0x3c>)
 800048a:	691b      	ldr	r3, [r3, #16]
 800048c:	4a09      	ldr	r2, [pc, #36]	; (80004b4 <TIM3_IRQHandler+0x3c>)
 800048e:	f023 0301 	bic.w	r3, r3, #1
 8000492:	6113      	str	r3, [r2, #16]
		EXTI->IMR |= (1 << EXTI_IMR_MR7_Pos) | (1 << EXTI_IMR_MR6_Pos)
 8000494:	4b08      	ldr	r3, [pc, #32]	; (80004b8 <TIM3_IRQHandler+0x40>)
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	4a07      	ldr	r2, [pc, #28]	; (80004b8 <TIM3_IRQHandler+0x40>)
 800049a:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800049e:	6013      	str	r3, [r2, #0]
				| (1 << EXTI_IMR_MR5_Pos); // enable all buttons interrupts
		GPIOB->ODR &= ~((1 << GPIO_ODR_ODR15_Pos) | (1 << GPIO_ODR_ODR14_Pos)
 80004a0:	4b06      	ldr	r3, [pc, #24]	; (80004bc <TIM3_IRQHandler+0x44>)
 80004a2:	68db      	ldr	r3, [r3, #12]
 80004a4:	4a05      	ldr	r2, [pc, #20]	; (80004bc <TIM3_IRQHandler+0x44>)
 80004a6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80004aa:	60d3      	str	r3, [r2, #12]
				| (1 << GPIO_ODR_ODR13_Pos)); // turn off all LEDs
	}
}
 80004ac:	bf00      	nop
 80004ae:	46bd      	mov	sp, r7
 80004b0:	bc80      	pop	{r7}
 80004b2:	4770      	bx	lr
 80004b4:	40000400 	.word	0x40000400
 80004b8:	40010400 	.word	0x40010400
 80004bc:	40010c00 	.word	0x40010c00

080004c0 <SysTick_Handler>:

		__NOP();
	}
}

void SysTick_Handler(void) {
 80004c0:	b480      	push	{r7}
 80004c2:	af00      	add	r7, sp, #0

	if (systick_counter++ > 1000) {
 80004c4:	4b0a      	ldr	r3, [pc, #40]	; (80004f0 <SysTick_Handler+0x30>)
 80004c6:	881b      	ldrh	r3, [r3, #0]
 80004c8:	1c5a      	adds	r2, r3, #1
 80004ca:	b291      	uxth	r1, r2
 80004cc:	4a08      	ldr	r2, [pc, #32]	; (80004f0 <SysTick_Handler+0x30>)
 80004ce:	8011      	strh	r1, [r2, #0]
 80004d0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80004d4:	d908      	bls.n	80004e8 <SysTick_Handler+0x28>

		systick_counter = 0;
 80004d6:	4b06      	ldr	r3, [pc, #24]	; (80004f0 <SysTick_Handler+0x30>)
 80004d8:	2200      	movs	r2, #0
 80004da:	801a      	strh	r2, [r3, #0]
		GPIOC->ODR ^= (1 << GPIO_ODR_ODR13_Pos);
 80004dc:	4b05      	ldr	r3, [pc, #20]	; (80004f4 <SysTick_Handler+0x34>)
 80004de:	68db      	ldr	r3, [r3, #12]
 80004e0:	4a04      	ldr	r2, [pc, #16]	; (80004f4 <SysTick_Handler+0x34>)
 80004e2:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80004e6:	60d3      	str	r3, [r2, #12]
	}
}
 80004e8:	bf00      	nop
 80004ea:	46bd      	mov	sp, r7
 80004ec:	bc80      	pop	{r7}
 80004ee:	4770      	bx	lr
 80004f0:	2000001c 	.word	0x2000001c
 80004f4:	40011000 	.word	0x40011000

080004f8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004f8:	480d      	ldr	r0, [pc, #52]	; (8000530 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004fa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004fc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000500:	480c      	ldr	r0, [pc, #48]	; (8000534 <LoopForever+0x6>)
  ldr r1, =_edata
 8000502:	490d      	ldr	r1, [pc, #52]	; (8000538 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000504:	4a0d      	ldr	r2, [pc, #52]	; (800053c <LoopForever+0xe>)
  movs r3, #0
 8000506:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000508:	e002      	b.n	8000510 <LoopCopyDataInit>

0800050a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800050a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800050c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800050e:	3304      	adds	r3, #4

08000510 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000510:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000512:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000514:	d3f9      	bcc.n	800050a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000516:	4a0a      	ldr	r2, [pc, #40]	; (8000540 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000518:	4c0a      	ldr	r4, [pc, #40]	; (8000544 <LoopForever+0x16>)
  movs r3, #0
 800051a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800051c:	e001      	b.n	8000522 <LoopFillZerobss>

0800051e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800051e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000520:	3204      	adds	r2, #4

08000522 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000522:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000524:	d3fb      	bcc.n	800051e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000526:	f000 f811 	bl	800054c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800052a:	f7ff fe3d 	bl	80001a8 <main>

0800052e <LoopForever>:

LoopForever:
    b LoopForever
 800052e:	e7fe      	b.n	800052e <LoopForever>
  ldr   r0, =_estack
 8000530:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000534:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000538:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800053c:	080005b4 	.word	0x080005b4
  ldr r2, =_sbss
 8000540:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000544:	20000020 	.word	0x20000020

08000548 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000548:	e7fe      	b.n	8000548 <ADC1_2_IRQHandler>
	...

0800054c <__libc_init_array>:
 800054c:	b570      	push	{r4, r5, r6, lr}
 800054e:	2600      	movs	r6, #0
 8000550:	4d0c      	ldr	r5, [pc, #48]	; (8000584 <__libc_init_array+0x38>)
 8000552:	4c0d      	ldr	r4, [pc, #52]	; (8000588 <__libc_init_array+0x3c>)
 8000554:	1b64      	subs	r4, r4, r5
 8000556:	10a4      	asrs	r4, r4, #2
 8000558:	42a6      	cmp	r6, r4
 800055a:	d109      	bne.n	8000570 <__libc_init_array+0x24>
 800055c:	f000 f81a 	bl	8000594 <_init>
 8000560:	2600      	movs	r6, #0
 8000562:	4d0a      	ldr	r5, [pc, #40]	; (800058c <__libc_init_array+0x40>)
 8000564:	4c0a      	ldr	r4, [pc, #40]	; (8000590 <__libc_init_array+0x44>)
 8000566:	1b64      	subs	r4, r4, r5
 8000568:	10a4      	asrs	r4, r4, #2
 800056a:	42a6      	cmp	r6, r4
 800056c:	d105      	bne.n	800057a <__libc_init_array+0x2e>
 800056e:	bd70      	pop	{r4, r5, r6, pc}
 8000570:	f855 3b04 	ldr.w	r3, [r5], #4
 8000574:	4798      	blx	r3
 8000576:	3601      	adds	r6, #1
 8000578:	e7ee      	b.n	8000558 <__libc_init_array+0xc>
 800057a:	f855 3b04 	ldr.w	r3, [r5], #4
 800057e:	4798      	blx	r3
 8000580:	3601      	adds	r6, #1
 8000582:	e7f2      	b.n	800056a <__libc_init_array+0x1e>
 8000584:	080005ac 	.word	0x080005ac
 8000588:	080005ac 	.word	0x080005ac
 800058c:	080005ac 	.word	0x080005ac
 8000590:	080005b0 	.word	0x080005b0

08000594 <_init>:
 8000594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000596:	bf00      	nop
 8000598:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800059a:	bc08      	pop	{r3}
 800059c:	469e      	mov	lr, r3
 800059e:	4770      	bx	lr

080005a0 <_fini>:
 80005a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005a2:	bf00      	nop
 80005a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005a6:	bc08      	pop	{r3}
 80005a8:	469e      	mov	lr, r3
 80005aa:	4770      	bx	lr
